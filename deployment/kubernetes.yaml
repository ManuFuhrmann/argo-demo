apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: git-clone-pvc
  namespace: argo-demo  # Specify the correct namespace
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard  # Specify a valid storage class
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-php-deployment
  namespace: argo-demo  # Specify the correct namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-php
  template:
    metadata:
      labels:
        app: nginx-php
    spec:
      containers:
      - name: nginx-php
        image: manu-fuhrmann/nginx-php-own  # Replace with your actual Docker Hub image name
        ports:
        - containerPort: 80
        volumeMounts:
        - name: git-clone-storage
          mountPath: /var/www/html  # The default document root for nginx
      initContainers:
      - name: git-clone
        image: alpine/git  # Use a lightweight image to perform the clone
        command: ['sh', '-c', 'git clone --single-branch --branch main https://github.com/ManuFuhrmann/upload /git-repo']  # Replace 'main' with your branch if needed
        volumeMounts:
        - name: git-clone-storage
          mountPath: /git-repo
      volumes:
      - name: git-clone-storage
        persistentVolumeClaim:
          claimName: git-clone-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-php-service
  namespace: argo-demo  # Specify the correct namespace
spec:
  type: NodePort  # Use NodePort to expose the service externally
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30080  # You can specify a NodePort or let Kubernetes choose one
  selector:
    app: nginx-php
